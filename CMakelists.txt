cmake_minimum_required(VERSION 3.18)

project(LightMan)

# include
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include/)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/)

# src
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR} TESTSRC)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/3rdparty/ply/ PLYSRC)

aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/src SRC)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/src/scene SRCSCENE)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/src/math SRCMATH)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/src/geometry SRCGEOMETRY)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/src/objects SRCOBJECTS)
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/src/engine SRCENGINE)

# Cross-Platform
set(SRCPLATFORM "")
aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/src/backend SRCPLATFORM)
if(APPLE)
    # add platform files
    aux_source_directory(${CMAKE_CURRENT_SOURCE_DIR}/src/backend/macos SRCPLATFORM)
endif()

# flags
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD 14)
include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)

# target
# add_library(${PROJECT_NAME} ${Src})
add_executable(${PROJECT_NAME}
    ${TESTSRC} 
    ${PLYSRC}
    ${SRC}
    ${SRCSCENE}
    ${SRCMATH}
    ${SRCGEOMETRY}
    ${SRCOBJECTS}
    ${SRCENGINE}
    ${SRCPLATFORM}
)